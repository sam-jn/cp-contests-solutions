{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"s",
				"string"
			],
			[
				"max",
				"maxc"
			],
			[
				"min",
				"minr"
			],
			[
				"c",
				"continue"
			],
			[
				"INT",
				"INT_MAX"
			],
			[
				"INT_",
				"INT_MIN"
			],
			[
				"bits",
				"bitset"
			],
			[
				"div",
				"divstr"
			],
			[
				"pop",
				"popcount"
			],
			[
				"j",
				"sam_jn"
			],
			[
				"al",
				"align-items\tproperty"
			],
			[
				"to",
				"to_ulong"
			],
			[
				"class",
				"className"
			],
			[
				"bott",
				"margin-bottom\tproperty"
			],
			[
				"Sti",
				"StickyContainer"
			],
			[
				"top",
				"margin-top\tproperty"
			],
			[
				"shop",
				"shop_name"
			],
			[
				"b",
				"beginend\t$1.begin(), $1.end()"
			],
			[
				"d",
				"double"
			],
			[
				"re",
				"return"
			],
			[
				"h",
				"html5\tSimple HTML5 Boilerplate"
			],
			[
				"html",
				"html5\tSimple HTML5 Boilerplate"
			],
			[
				"user",
				"user_dict"
			],
			[
				"TEMPLATE",
				"TEMPLATE_DIR"
			]
		]
	},
	"buffers":
	[
		{
			"file": "codechef/LTIME86B/1.cpp",
			"settings":
			{
				"buffer_size": 2795,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "codechef/LTIME86B/2.cpp",
			"settings":
			{
				"buffer_size": 3456,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"contents": "/* \nAUTHOR : @sam_jn\n*/\n//lo + 1, hi, ret lo\n#include<bits/stdc++.h>\n// #include <ext/pb_ds/assoc_container.hpp>\nusing namespace std;\n// using namespace __gnu_pbds;\n// typedef tree<pair<int, int>, null_type, less_equal<pair<int, int>>, rb_tree_tag, tree_order_statistics_node_update> ordered_set;\n#define boost ios_base::sync_with_stdio(false); cin.tie(NULL);\n#define ll long long\n#define MOD 1000000007\n#define pb push_back\n#define ff first\n#define ss second\n#define NN 1000002\n#define in(a, n) for(int i = 0; i < n; i++) cin >> a[i];\n#define ot(a, n) for(int i = 0; i < n; i++) cout << a[i] << \" \";\n#define ot2(a, n) for(int i = 0; i < n; i++) cout << a[i] << \"\\n\";\nll pwr(ll a, ll b);\nll pwr(ll a, ll b, ll m);\nint baap[200002];\nint prime[NN];\nint find(int i);  \nbool Union(int x, int y);\nll inv(ll x) {return pwr(x, MOD - 2, MOD);}\nvoid init();\nll max(ll x, ll y, ll z) {return max(x, max(y, z));}\nint dx[8] = {0, 0, 1, -1, 1, 1, -1, -1};\nint dy[8] = {-1, 1, 0, 0, 1, -1, 1, -1};\n//----------------------------------SOLUTION-BELOW-------------------------------------------// \nstring bin(ll n) \n{ \n    //finding the binary form of the number and  \n    //coneverting it to string.  \n    string s = bitset<64> (n).to_string(); \n      \n    //Finding the first occurance of \"1\" \n    //to strip off the leading zeroes. \n    const auto loc1 = s.find('1'); \n      \n    if(loc1 != string::npos) \n        return s.substr(loc1); \n      \n    return \"0\"; \n} \nll dec(string n) \n{ \n    string num = n; \n    ll dec_value = 0; \n  \n    // Initializing base value to 1, i.e 2^0 \n    ll base = 1; \n  \n    ll len = num.length(); \n    for (int i = len - 1; i >= 0; i--) { \n        if (num[i] == '1') \n            dec_value += base; \n        base = base * 2; \n    } \n  \n    return dec_value; \n} \nvoid solve(){\n    int n;\n    cin >> n;\n    ll a[n];\n    in(a, n);\n    ll ans = 0;\n    for(int i = 0; i < n; i++){\n        string x = bin(a[i]); \n        for(int j = i + 1; j < n; j++){\n            string y = bin(a[j]);\n            string z1 = x + y, z2 = y + x;\n            ll xx = dec(z1);\n            ll yy = dec(z2);\n            ans = max(ans, abs(xx - yy));\n        }\n    }\n    cout << ans;\n}\nint main(){\n\n\n                                                            // #ifndef ONLINE_JUDGE    \n                                                            // freopen(\"/home/samyak/Desktop/CP/input.txt\", \"r\", stdin);\n                                                            // freopen(\"/home/samyak/Desktop/CP/output2.txt\", \"w\", stdout);\n                                                            // #else\n                                                            // // online submission\n                                                            // #endif\n// \n\n    boost\n    int _ = 1;\n        // cout << to_string(0) << endl;\n    // cout << 0 << endl;\n    cin >> _;\n    while(_--){\n        solve();\n        cout << endl;\n    }\n}\n \n \n//--------------------------------------DEFININTIONS---------------------------------------\nll pwr(ll a, ll b){\n    if(b == 0)\n        return 1 ;\n    ll c = pwr(a, b/2) ;\n    c = c * c;\n    if(b % 2)\n        return c*a;\n    return c ;\n}\nll pwr(ll a, ll b, ll m){\n    if(b == 0)\n        return 1;\n    ll c = pwr(a, b/2, m) % m ;\n    c = (c * c) % m;    \n    if(b % 2)\n        return (c * a%m) % m;\n    return c ;\n}\nint find(int i)  \n{  \n    if (baap[i] != i)  \n        baap[i] = find(baap[i]);  \n  \n    return baap[i];  \n}\n \nbool Union(int x, int y)\n{\n    x = find(x);\n    y = find(y);\n    if(x == y) return false;\n    baap[x] = y;\n    return true;\n}\nvoid init(){\n  for(ll i = 2; i < NN; i++){\n      if(prime[i]) continue;\n      for(ll j = 2*i; j < NN; j += i)\n          prime[j] = i;\n  }\n}",
			"file": "codechef/LTIME86B/3.cpp",
			"file_size": 3694,
			"file_write_time": 132401650747010156,
			"settings":
			{
				"buffer_size": 3712,
				"line_ending": "Unix"
			}
		},
		{
			"file": "input.txt",
			"settings":
			{
				"buffer_size": 27,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			}
		},
		{
			"file": "output2.txt",
			"settings":
			{
				"buffer_size": 7,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/C++/C++ Single File.sublime-build",
					""
				],
				[
					"Packages/C++/C++ Single File.sublime-build",
					"Run"
				]
			],
			[
				"Packages/C++/C++ Single File.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/User/c++14.sublime-build",
					""
				],
				[
					"Packages/User/c++14.sublime-build",
					"Run"
				]
			],
			[
				"Packages/User/c++14.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"comma",
				"Preferences: Terminal View: Palette Commands"
			],
			[
				"key",
				"Preferences: Key Bindings"
			],
			[
				"Package Control: ",
				"Package Control: Remove Package"
			],
			[
				"Package Control",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"insta",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 164.0,
		"history":
		[
			"pwd",
			"ls",
			"exit()",
			"pwd",
			"exit()",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/samyak/Desktop/CP",
		"/home/samyak/Desktop/CP/codechef",
		"/home/samyak/Desktop/CP/codechef/LTIME86B"
	],
	"file_history":
	[
		"/home/samyak/Desktop/CP/cf/1384/2.cpp",
		"/home/samyak/Desktop/CP/hackercup/2020-qual/1.cpp",
		"/home/samyak/Desktop/CP/cf/1384/3.cpp",
		"/home/samyak/Desktop/CP/cf/1384/1.cpp",
		"/home/samyak/Desktop/loop/web-scraper/scraper/haystack/mainapp/models.py",
		"/home/samyak/Desktop/CP/cf/1382/5.cpp",
		"/home/samyak/Desktop/CP/cf/1382/4.cpp",
		"/home/samyak/Desktop/CP/cf/1382/3.cpp",
		"/home/samyak/Desktop/CP/cf/1382/2.cpp",
		"/home/samyak/Desktop/CP/cf/1382/1.cpp",
		"/home/samyak/Desktop/CP/cf/1374/6.cpp",
		"/home/samyak/Desktop/CP/cf/1374/5.cpp",
		"/home/samyak/Desktop/CP/cf/1374/4.cpp",
		"/home/samyak/Desktop/CP/cf/1374/3.cpp",
		"/home/samyak/Desktop/CP/cf/1374/2.cpp",
		"/home/samyak/Desktop/CP/cf/1374/1.cpp",
		"/home/samyak/Desktop/CP/cf/1385/4.cpp",
		"/home/samyak/Desktop/CP/cf/1379/3.cpp",
		"/home/samyak/Desktop/CP/cf/1379/2.cpp",
		"/home/samyak/Desktop/CP/cf/1379/1.cpp",
		"/home/samyak/Desktop/CP/cf/1385/3.cpp",
		"/home/samyak/Desktop/CP/cf/1385/2.cpp",
		"/home/samyak/Desktop/CP/cf/1385/1.cpp",
		"/home/samyak/Desktop/CP/cf/1380/1.cpp",
		"/home/samyak/Desktop/CP/cf/1380/2.cpp",
		"/home/samyak/Desktop/CP/cf/1380/3.cpp",
		"/home/samyak/Desktop/CP/cf/v1371/1.cpp",
		"/home/samyak/Desktop/CP/cf/v1371/2.cpp",
		"/home/samyak/Desktop/CP/cf/v1371/3.cpp",
		"/home/samyak/Desktop/CP/cf/v1371/4.cpp",
		"/home/samyak/Desktop/CP/cf/1372/4.cpp",
		"/home/samyak/Desktop/CP/cf/1372/3.cpp",
		"/home/samyak/Desktop/CP/cf/1372/2.cpp",
		"/home/samyak/Desktop/CP/cf/1372/1.cpp",
		"/home/samyak/Desktop/CP/template.cpp",
		"/home/samyak/Desktop/CP/contest.sh",
		"/home/samyak/Desktop/CP/contest.",
		"/home/samyak/Desktop/CP/atc/alsing/4.cpp",
		"/home/samyak/Desktop/CP/atc/alsing/3.cpp",
		"/home/samyak/Desktop/CP/atc/alsing/2.cpp",
		"/home/samyak/Desktop/CP/atc/alsing/1.cpp",
		"/home/samyak/Desktop/CP/cf/1375/5.cpp",
		"/home/samyak/Desktop/CP/cf/1375/4.cpp",
		"/home/samyak/Desktop/CP/cf/1375/3.cpp",
		"/home/samyak/Desktop/CP/cf/1375/2.cpp",
		"/home/samyak/Desktop/CP/cf/1375/1.cpp",
		"/home/samyak/Desktop/CP/script.py",
		"/home/samyak/Desktop/CP/codeforces-auto-submit/starter_script.py",
		"/home/samyak/Desktop/CP/codeforces-auto-submit/script.py",
		"/home/samyak/Desktop/chromedriver",
		"/home/samyak/.config/sublime-text-3/Packages/TerminalView/README.md",
		"/home/samyak/.config/sublime-text-3/Packages/Terminality/README.md",
		"/home/samyak/Desktop/CP/cf/1371/1.cpp",
		"/var/www/html/magento2/app/code/Myvendor/readme.md",
		"/var/www/html/magento2/readme.md",
		"/etc/php/7.2/apache2/php.ini",
		"/etc/apache2/apache2.conf",
		"/var/www/html/phpmyadmin/config.inc.php",
		"/home/samyak/Desktop/loop/socialproof/haystack/campaigns/data.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/djshopify/views.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/djshopify/apps.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/djshopify/apis.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/djshopify/urls.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/campaigns/models.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/djshopify/utils.py",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/containers/CreateCampaign/Banner/index.js",
		"/home/samyak/Desktop/loop/socialproof/embedded/.gitignore",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/containers/App/index.js",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/reducers/campaigndetail.js",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/containers/campaigndetailpage/preview.js",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/index.js",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/registerServiceWorker.js",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/containers/CreateCampaign/Banner/styles.css",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/containers/App/styles.css",
		"/home/samyak/Desktop/loop/socialproof/haystack/campaigns/apis.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/djshopify/middlewares.py",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/containers/CreateCampaign/index.js",
		"/home/samyak/Desktop/loop/socialproof/embedded/src/index.css",
		"/home/samyak/Desktop/loop/socialproof/haystack/campaigns/serializers.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/campaigns/urls.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/haystack/urls.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/storefront/urls.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/dashboard/urls.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/djshopify/authentication.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/storefront/views.py",
		"/home/samyak/Desktop/ss.py",
		"/home/samyak/Desktop/loop/socialproof/haystack/dashboard/views.py",
		"/home/samyak/Desktop/loop/model/recommendation-models/svm_gender_classifier.py",
		"/home/samyak/Desktop/CP/atc/abc167/a.cpp",
		"/home/samyak/Desktop/CP/input.txt",
		"/home/samyak/Desktop/CP/cf/1362/a.cpp",
		"/home/samyak/Desktop/CP/cf/1362/b.cpp",
		"/home/samyak/Desktop/CP/cf/1362/c.cpp",
		"/home/samyak/Desktop/CP/cf/1362/d.cpp",
		"/home/samyak/Desktop/CP/cf/1362/e.cpp",
		"/home/samyak/Desktop/CP/cf/1363/c.cpp",
		"/home/samyak/Desktop/CP/cf/1363/b.cpp",
		"/home/samyak/Desktop/CP/cf/1363/a.cpp",
		"/home/samyak/Desktop/CP/cf/1354/c.cpp",
		"/home/samyak/Desktop/CP/cf/1354/b.cpp",
		"/home/samyak/Desktop/CP/cf/1354/a.cpp",
		"/home/samyak/Desktop/CP/cf/1359/d.cpp",
		"/home/samyak/Desktop/CP/cf/1359/c.cpp",
		"/home/samyak/Desktop/CP/cf/1359/b.cpp",
		"/home/samyak/Desktop/CP/cf/1359/a.cpp",
		"/home/samyak/Desktop/CP/cf/1358/d.cpp",
		"/home/samyak/Desktop/CP/cf/1358/c.cpp",
		"/home/samyak/Desktop/CP/cf/1358/b.cpp",
		"/home/samyak/Desktop/CP/cf/1358/a.cpp",
		"/home/samyak/Desktop/CP/cf/1360/h.cpp",
		"/home/samyak/Desktop/CP/cf/1360/g.cpp",
		"/home/samyak/Desktop/CP/cf/1360/f.cpp",
		"/home/samyak/Desktop/CP/cf/1360/e.cpp",
		"/home/samyak/Desktop/CP/cf/1360/d.cpp",
		"/home/samyak/Desktop/CP/cf/1360/c.cpp",
		"/home/samyak/Desktop/CP/cf/1360/b.cpp",
		"/home/samyak/Desktop/CP/cf/1360/a.cpp",
		"/home/samyak/Desktop/CP/cf/1355/d.cpp",
		"/home/samyak/Desktop/CP/cf/1355/c.cpp",
		"/home/samyak/Desktop/CP/cf/1355/b.cpp",
		"/home/samyak/Desktop/CP/cf/1355/a.cpp",
		"/home/samyak/Desktop/data.csv",
		"/home/samyak/Desktop/data2.csv",
		"/home/samyak/Desktop/CP/cf/1353/e.cpp",
		"/home/samyak/Desktop/CP/cf/1353/d.cpp",
		"/home/samyak/Desktop/CP/cf/1353/c.cpp",
		"/home/samyak/Desktop/CP/cf/1353/b.cpp",
		"/home/samyak/Desktop/CP/cf/1353/a.cpp"
	],
	"find":
	{
		"height": 28.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"count",
			"__",
			"LLONG_MIN"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"cnt",
			"t",
			"INT_MIN"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"folders":
	[
		{
			"path": "/home/samyak/Desktop/CP"
		}
	],
	"groups":
	[
		{
			"selected": 2,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "codechef/LTIME86B/1.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2795,
						"regions":
						{
						},
						"selection":
						[
							[
								2795,
								2795
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 456.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "codechef/LTIME86B/2.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3456,
						"regions":
						{
						},
						"selection":
						[
							[
								3456,
								3456
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 513.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "codechef/LTIME86B/3.cpp",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3712,
						"regions":
						{
						},
						"selection":
						[
							[
								1922,
								1922
							]
						],
						"settings":
						{
							"syntax": "Packages/C++/C++.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 473.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 3,
					"file": "input.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 27,
						"regions":
						{
						},
						"selection":
						[
							[
								27,
								27
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "output2.txt",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7,
						"regions":
						{
						},
						"selection":
						[
							[
								2,
								2
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 28.0
	},
	"input":
	{
		"height": 40.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		],
		"cols":
		[
			0.0,
			0.713534054109,
			1.0
		],
		"rows":
		[
			0.0,
			0.5,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 150.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "Packages/User/c++14.sublime-build",
	"project": "",
	"replace":
	{
		"height": 52.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
		"last_automatic_layout":
		[
			[
				0,
				0,
				1,
				2
			],
			[
				1,
				0,
				2,
				1
			],
			[
				1,
				1,
				2,
				2
			]
		]
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 128.0,
	"status_bar_visible": true,
	"template_settings":
	{
		"max_columns": 2
	}
}
